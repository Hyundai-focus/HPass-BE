<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundai.hpass.mapper.SubscriptionMapper">


    <insert id="addSubscriber">
        INSERT INTO SUBSCRIPTION (
        subs_no,
        member_no,
        payment
        ) VALUES (
        subs_seq.nextval,
        #{memberNo},
        #{payment}
        )
    </insert>
    <select id="findByMemberNo" resultType="com.hyundai.hpass.domain.Subscription">
        <![CDATA[
        SELECT
            subs_no AS subsNo,
            member_no AS memberNo,
            subs_start_dt AS subsStartDt,
            payment AS payment,
            last_date AS lastDate
        FROM SUBSCRIPTION
        WHERE member_no = #{memberNo}
        AND last_date >= TO_CHAR(sysdate, 'yyyy-mm-dd')
        ]]>
    </select>
    <update id="removeByMemberNo">
        UPDATE SUBSCRIPTION
        SET LAST_DATE = #{lastDate}
        WHERE member_no = #{memberNo}
    </update>
    <select id="getAdminMainDTO" resultType="com.hyundai.hpass.dto.AdminMainDTO">
        <![CDATA[
        WITH date_range AS (
            SELECT TRUNC(SYSDATE) - LEVEL + 1 AS date_value
            FROM dual
        CONNECT BY LEVEL <= TRUNC(SYSDATE) - TRUNC(SYSDATE, 'MM') + 1
            )
        SELECT
            TO_CHAR(dr.date_value, 'YYYY-MM-DD') AS mainDt,
            NVL(COUNT(DISTINCT(ch.coupon_no)), 0) AS couponUseCnt,
            NVL(COUNT(DISTINCT(ts.today_store_no)),0) AS allVisitCnt,
            NVL(COUNT(DISTINCT(ph.product_history_no)),0) AS productCnt
        FROM date_range dr
        LEFT JOIN coupon_history ch ON TRUNC(ch.coupon_used_dt) = dr.date_value
        LEFT JOIN (select rownum AS today_store_no, today_store_dt
                   from (select today_store_dt, count(store_no) AS visitCnt
                         from today_store
                         where member_no is not null
                         group by today_store_dt, member_no
                         HAVING count(store_no) = 5)) ts ON TRUNC(ts.today_store_dt) = dr.date_value
        LEFT JOIN (select product_history_no, product_history_dt
                   from product_history
                   where product_status = 'true' OR product_status IS NULL) ph ON TRUNC(ph.product_history_dt) = dr.date_value
        GROUP BY dr.date_value
        ORDER BY dr.date_value
        ]]>
    </select>
    <select id="getAdminMainSubsDTO" resultType="com.hyundai.hpass.dto.AdminMainSubsDTO">
        <![CDATA[
            WITH All_Months AS (
                SELECT TO_CHAR(ADD_MONTHS((SELECT MIN(SUBS_START_DT) FROM SUBSCRIPTION), LEVEL-1 ),'YYYY-MM') AS Month_Date
                FROM DUAL
            CONNECT BY LEVEL <= MONTHS_BETWEEN(TO_DATE(SYSDATE,'YYYY-MM-DD'),TO_DATE((SELECT MIN(SUBS_START_DT) FROM SUBSCRIPTION),'YYYY-MM-DD'))+1
                )
            SELECT AM.MONTH_DATE AS subsMonth,
                   NVL(SUBS_CNT,0) AS subsAddCnt,
                   (SELECT COUNT(*) FROM SUBSCRIPTION WHERE SUBSTR(LAST_DATE, 0, 7) = AM.MONTH_DATE) AS subsStopCnt
            FROM All_Months AM
                     LEFT JOIN
                 (SELECT TO_CHAR(SUBS_START_DT, 'YYYY-MM') AS Month_Date, COUNT(SUBS_NO) AS SUBS_CNT
                  FROM SUBSCRIPTION SUBS
                  GROUP BY TO_CHAR(SUBS_START_DT, 'YYYY-MM')
                  ORDER BY Month_Date) SUBS
                 ON AM.MONTH_DATE = SUBS.Month_Date
        ]]>
    </select>
    <select id="getAdminSubsDTO" resultType="com.hyundai.hpass.dto.AdminSubsDTO">
        <![CDATA[
        WITH All_Months AS (
            SELECT TO_CHAR(ADD_MONTHS((SELECT MIN(SUBS_START_DT) FROM SUBSCRIPTION), LEVEL-1 ),'YYYY-MM') AS Month_Date
            FROM DUAL
        CONNECT BY LEVEL <= MONTHS_BETWEEN(TO_DATE(SYSDATE,'YYYY-MM-DD'),TO_DATE((SELECT MIN(SUBS_START_DT) FROM SUBSCRIPTION),'YYYY-MM-DD'))+1
            )
        SELECT AM.MONTH_DATE AS subsMonth,
               NVL(SUBS_CNT,0) AS subsAddCnt,
               (SELECT COUNT(*) FROM SUBSCRIPTION WHERE SUBSTR(LAST_DATE, 0, 7) = AM.MONTH_DATE) AS subsStopCnt,
               SUM(NVL(SUBS_CNT,0)) OVER (ORDER BY AM.MONTH_DATE) AS cumulativeCnt,
                ((SUM(NVL(SUBS_CNT,0)) OVER (ORDER BY AM.MONTH_DATE) - (SELECT COUNT(*) FROM SUBSCRIPTION WHERE LAST_DATE < AM.MONTH_DATE))) AS subsLeft
        FROM All_Months AM
                 LEFT JOIN
             (SELECT TO_CHAR(SUBS_START_DT, 'YYYY-MM') AS Month_Date, COUNT(SUBS_NO) AS SUBS_CNT
              FROM SUBSCRIPTION SUBS
              GROUP BY TO_CHAR(SUBS_START_DT, 'YYYY-MM')
              ORDER BY Month_Date) SUBS
             ON AM.MONTH_DATE = SUBS.Month_Date
        ]]>
    </select>
    <select id="getAllSubscription" resultType="com.hyundai.hpass.dto.SubscriptionDTO">
        <![CDATA[
        SELECT rowNo, email, memberName, subsStartDt, payment, subsStatus
        FROM (
                 SELECT rownum rowNo, email, memberName, subsStartDt, payment, subsStatus
                 FROM (
                          SELECT
                              M.EMAIL AS email,
                              M.MEMBER_NAME AS memberName,
                              TO_CHAR(S.subs_start_dt, 'YYYY-MM-DD') AS subsStartDt,
                              S.payment AS payment,
                              (CASE WHEN S.last_date='9999-99-99' THEN '-'
                                    WHEN S.last_date < sysdate THEN '구독 만료'
                                    ELSE S.last_date
                                  END) subsStatus
                          FROM subscription S
                                   INNER JOIN MEMBER M
                                              ON S.member_no = M.member_no
                          ORDER BY subs_start_dt DESC

                      ) A
                 WHERE rownum <= #{page} * #{amount}
             )
        WHERE rowNo > (#{page} - 1) * #{amount}
        ]]>
    </select>
    <select id="getTotalCnt" resultType="java.lang.Integer">
        SELECT count(subs_no)
        FROM subscription
    </select>
</mapper>